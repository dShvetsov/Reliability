1) Оценка числа потенциальных состояний программы.

Пронумеруием строчки программы следующим образом:

  int h;
  void
  f (int a, int b)
  {
0:  int x, y;
1:  x = 1;
2:  y = 4;
3:  h = 1;
4:  if (y > 5)
      {
5:      if (y > 1)
          {
6:          if (h > a)
              {
7:              y = 1;
              }
            else
              {
8:              y = 4;
              }
          }
        else
          {
9:          if (y > 7)
              {
10:             x = 5;
              }
11:         y = 1;
          }
      }
12:}

  void
  g (int a, int b)
  {
0:  int x, y;
1:  x = 2;
2:  y = 2;
3:  h = 2;
4:  if (h < a)
      {
5:      h = a;
6:      y = 5;
      }
7:  h = a - x;
8:  h = x - a;
9:  while (x < 5)
      {
10:      if (h > 0)
11:        break;
12:      y = 6;
13:      if (h > y - x)
          {
14:          h = x - y;
          }
15:      h = y;
      }
16:}

h - 2^32 состояния.
f: a,b,x,y - 2^32 состояний. 12 инструкций.
g: a,b,x,y : 2^32 состояний. 16 инструкций.

итого : 17 * 13 * 2^(4 * 32 + 4 * 32 + 32) = 17*13*2^288.

2) 

Возможные состояния :
f:: 
2^-31<=a,b<=2^31
x={#,1,5}
y={#,1,4}
g::
2^-31<=a,b<=2^31
x={#,2}
y={#,2,5,6}

h = {#,-4,1,2,6,g::a, g::a-2, 2-g::a}

  int h;
  void
  f (int a, int b)
  {
0:  int x, y; // 2^-31<=a,b,g<=2^31
// if g execute before f then g may take any number of int
1:  x = 1; // -2^31<=a,b,g<=2^31, x={#}, y={#}
2:  y = 4;// -2^31<=a,b,g<=2^31, x={1}, y={#}
3:  h = 1;// -2^31<=a,b,h<=2^31, x={1}, y={4}
4:  if (y > 5) //y = 4 => 6-12 состояния недостижимы
      {
5:      if (y > 1)
          {
6:          if (h > a)
              {
7:              y = 1;
              }
            else
              {
8:              y = 4;
              }
          }
        else
          {
9:          if (y > 7)
              {
10:             x = 5;
              }
11:         y = 1;
          }
      }
12:}

  void
  g (int a, int b)
  {
0:  int x, y;// -2^31<=a,b<=2^31, h={#,1}
// if f execute before g h may take 1, else h take #
1:  x = 2;// -2^31<=a,b<=2^31, x={#}, h={#,1}
2:  y = 2;// -2^31<=a,b<=2^31, x={2}, y={#}, h={#,1}
3:  h = 2;// -2^31<=a,b<=2^31, x={2}, y={2}, h={#,1}
4:  if (h < a) //-2^31<=a<=2^31, x={2}, y={2}, h = {1,2}
      {
5:      h = a;// -2^31<=a,b<=2^31, x={2}, y={2}, h = {1,2} 
6:      y = 5;// -2^31<=a,b<=2^31, x={2}, y={2}, h={1,a}
      }
7:  h = a - x;// -2^31<=a,b<=2^31, x={2}, y={2,5}, h={1,2,a}
8:  h = x - a;// -2^31<=a,b<=2^31, x={2}, y={2,5}, h={1,a-2}
9:   while (x < 5) // -2^31<=a,b<=2^31, x={2}, y={2,5}, h={1,2-a}
      {
10:      if (h > 0) //-2^31<=a,b<=2^31, x={2}, y={2,5}, h={1, 2-a}
11:        break; -2^31<=a,b<=2^31, x={2}, y={2,5}, h={1,2-a} && h>0
12:      y = 6;//-2^31<=a,b<=2^31, x={2}, y={2,5}, h={2-a <=0, 1}
13:      if (h > y - x) //-2^31<=a,b<=2^31, x={2}, y={6}, h={2 - a && h<=0, 1} => 0>=a-2>6-2=4 => 0>4 or 1>4
          {
14:          h = x - y; // недостижимо
          }
15:      h = y;//-2^31<=a,b<=2^31, x={2}, y={2,5}, h={a-2 <=0, 1}
      }
16:}

Следовательно, количество состояний не больше чем 16*7*3*3*2*4*8 * 2^(32*4)

16 - кол-во достижимых инструкций в g
7 - кол-во достижимых инструкций в f
3 - f::x
3 - f::y
2 - g::x
4 - g::y
8 - h
2^32 - g::a, g::b, f::a, f::b
