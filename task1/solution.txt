1) Оценка числа потенциальных состояний программы.

Пронумеруием строчки программы следующим образом:

  int h;
  void
  f (int a, int b)
  {
1:  int x, y;
2:  x = 1;
3:  y = 4;
4:  h = 1;
5:  if (y > 5)
      {
6:      if (y > 1)
          {
7:          if (h > a)
              {
8:              y = 1;
              }
            else
              {
9:              y = 4;
              }
          }
        else
          {
10:         if (y > 7)
              {
11:             x = 5;
              }
12:         y = 1;
          }
      }
  }

  void
  g (int a, int b)
  {
1:  int x, y;
2:  x = 2;
3:  y = 2;
4:  h = 2;
5:  if (h < a)
      {
6:      h = a;
7:      y = 5;
      }
8:  h = a - x;
9:  h = x - a;
10:  while (x < 5)
      {
11:      if (h > 0)
12:        break;
13:      y = 6;
14:      if (h > y - x)
          {
15:          h = x - y;
          }
16:      h = y;
      }
  }

h - 2^32 состояния.
f: a,b,x,y - 2^32 состояний. 12 инструкций.
g: a,b,x,y : 2^32 состояний. 16 инструкций.

итого : 16 * 12 * 2^(4 * 32 + 4 * 32 + 32) = 16*12*2^288.

2) 

Возможные состояния :
f:: 
2^-31<=a,b<=2^31
x={#,1,5}
y={#,1,4}
g::
2^-31<=a,b<=2^31
x={#,2}
y={#2,5,6}

h = {#,-4,1,2,6,g::a, g::a-2, 2-g::a}

  int h;
  void
  f (int a, int b)
  {
1:  int x, y; // -2^31<=a,b<=2^31, x={#}, y={#}, -2^31<=h<=2^31
// if g execute before f then g may take any number from int
2:  x = 1; // -2^31<=a,b<=2^31, x={#,1}, y={#}, -2^31<=h<=2^31
3:  y = 4;// -2^31<=a,b<=2^31, x={#,1}, y={#,4}, -2^31<=h<=2^31
4:  h = 1;// -2^31<=a,b<=2^31, x={#,1}, y={#,4},-2^31<=h<=2^31
5:  if (y > 5) //y = 4 => 6-12 состояния недостижимы
      {
6:      if (y > 1)
          {
7:          if (h > a)
              {
8:              y = 1;// -2^31<=a,b<=2^31, x={#,1}, y={#,4,1},-2^31<=h<=2^31
              }
            else
              {
9:              y = 4;// -2^31<=a,b<=2^31, x={#,1}, y={#,4,1},-2^31<=h<=2^31
              }
          }
        else
          {
10:         if (y > 7)
              {
11:             x = 5;// -2^31<=a,b<=2^31, x={#,1,5}, y={#,4,1}, -2^31<=h<=2^31
              }
12:         y = 1;// -2^31<=a,b<=2^31, x={#,1,5}, y={#,4,1},-2^31<=h<=2^31
          }
      }
  }

  void
  g (int a, int b)
  {
1:  int x, y;// -2^31<=a,b<=2^31, x={#}, y={#}, h={#,1}
// if f execute before g h may take # or 1
2:  x = 2;// -2^31<=a,b<=2^31, x={#,2}, y={#}, h={#,1}
3:  y = 2;// -2^31<=a,b<=2^31, x={#,2}, y={#,2}, h={#,1}
4:  h = 2;// -2^31<=a,b<=2^31, x={#,2}, y={#,2}, h={#,1,2}
5:  if (h < a) // h = 2, -2^31<=a<=2^31
      {
6:      h = a;// -2^31<=a,b,h<=2^31, x={#,2}, y={#,2} 
7:      y = 5;// -2^31<=a,b,h<=2^31, x={#,2}, y={#,2,5}
      }
8:  h = a - x;// -2^31<=a,b,h<=2^31, x={#,2}, y={#,2,5}
9:  h = x - a;// -2^31<=a,b,h<=2^31, x={#,2}, y={#,2,5}
10:  while (x < 5) // x=2
      {
11:      if (h > 0) // -2^31<=h<=2^31
12:        break;
13:      y = 6;// -2^31<=a,b,h<=2^31, x={#,2}, y={#,2,5,6}
14:      if (h > y - x) // y=6,x=2, h<=0
          {
15:          h = x - y;// -2^31<=a,b,h<=2^31, x={#,2}, y={#,2,5,6}
          }
16:      h = y;// -2^31<=a,b,h<=2^31, x={#,2}, y={#,2,5,6}
      }
  }


